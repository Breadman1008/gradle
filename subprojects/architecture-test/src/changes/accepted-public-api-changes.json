{
    "acceptedApiChanges": [
        {
            "type": "org.gradle.api.plugins.quality.CheckstylePlugin",
            "member": "Class org.gradle.api.plugins.quality.CheckstylePlugin",
            "acceptation": "Removed a static internal-only method",
            "changes": [
                "org.gradle.api.plugins.quality.internal.AbstractCodeQualityPlugin.maybeAddOpensJvmArgs(org.gradle.jvm.toolchain.JavaLauncher,org.gradle.workers.ForkingWorkerSpec)"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeNarcPlugin",
            "member": "Class org.gradle.api.plugins.quality.CodeNarcPlugin",
            "acceptation": "Removed a static internal-only method",
            "changes": [
                "org.gradle.api.plugins.quality.internal.AbstractCodeQualityPlugin.maybeAddOpensJvmArgs(org.gradle.jvm.toolchain.JavaLauncher,org.gradle.workers.ForkingWorkerSpec)"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.PmdPlugin",
            "member": "Class org.gradle.api.plugins.quality.PmdPlugin",
            "acceptation": "Removed a static internal-only method",
            "changes": [
                "org.gradle.api.plugins.quality.internal.AbstractCodeQualityPlugin.maybeAddOpensJvmArgs(org.gradle.jvm.toolchain.JavaLauncher,org.gradle.workers.ForkingWorkerSpec)"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.NamedDomainObjectContainerScope",
            "member": "Constructor org.gradle.kotlin.dsl.NamedDomainObjectContainerScope(org.gradle.api.NamedDomainObjectContainer,kotlin.jvm.internal.DefaultConstructorMarker)",
            "acceptation": "Private constructor changed to internal. This constructor was synthetically added by Kotlin to allow the private constructor to be called from companion object. It could not be called by Kotlin code.",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoPluginExtension",
            "member": "Method org.gradle.testing.jacoco.plugins.JacocoPluginExtension.getToolVersion()",
            "acceptation": "[ADD YOUR CUSTOM REASON HERE]",
            "changes": [
                "Method return type has changed",
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoPluginExtension",
            "member": "Method org.gradle.testing.jacoco.plugins.JacocoPluginExtension.setToolVersion(java.lang.String)",
            "acceptation": "[ADD YOUR CUSTOM REASON HERE]",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method org.gradle.testing.jacoco.plugins.JacocoTaskExtension.getAddress()",
            "acceptation": "[ADD YOUR CUSTOM REASON HERE]",
            "changes": [
                "Method return type has changed",
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method org.gradle.testing.jacoco.plugins.JacocoTaskExtension.getPort()",
            "acceptation": "[ADD YOUR CUSTOM REASON HERE]",
            "changes": [
                "Method return type has changed",
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method org.gradle.testing.jacoco.plugins.JacocoTaskExtension.setAddress(java.lang.String)",
            "acceptation": "[ADD YOUR CUSTOM REASON HERE]",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method org.gradle.testing.jacoco.plugins.JacocoTaskExtension.setPort(int)",
            "acceptation": "[ADD YOUR CUSTOM REASON HERE]",
            "changes": [
                "Method has been removed"
            ]
        }
    ]
}
